package ge.market.flea.telegram;import java.util.ArrayList;import java.util.List;import java.util.Map;import org.telegram.abilitybots.api.sender.SilentSender;import org.telegram.telegrambots.meta.api.methods.send.SendMessage;import org.telegram.telegrambots.meta.api.objects.Update;import org.telegram.telegrambots.meta.api.objects.inlinequery.result.InlineQueryResultArticle;import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;public class CommonSearchInlineFactory extends KeyboardAbstract {    private final SilentSender sender;    private final Map<Long, UserState> chatStates;    public CommonSearchInlineFactory(SilentSender sender, Map<Long, UserState> chatStates) {        super(sender, chatStates);        this.sender = sender;        this.chatStates = chatStates;    }    @Override    public void messageResolver(Update update) {        Long chatId = getChatId(update);        SendMessage message = createInitialSections(update, chatId);        message.setChatId(chatId);        messageSender(message);    }    private SendMessage createInitialSections(Update update, long chatId) {        SendMessage message = new SendMessage();        List<List<InlineKeyboardButton>> rowsInline = getRowsLine(message);        List<InlineKeyboardButton> rowInline = new ArrayList<>();        InlineKeyboardButton inlineKeyboardButton1 = getInlineKeyBoardButton("\uD83D\uDCF1" + "phone", "getPhone");        InlineKeyboardButton inlineKeyboardButton2 = getInlineKeyBoardButton("\uD83C\uDFB3" + "sport", "getSport");        InlineKeyboardButton inlineKeyboardButton3 = getInlineKeyBoardButton("\uD83D\uDC55" + "cloth", "getCloth");        rowInline.add(inlineKeyboardButton1);        rowInline.add(inlineKeyboardButton2);        rowInline.add(inlineKeyboardButton3);        rowsInline.add(rowInline);       // chatStates.put(chatId, )        message.setText("Choose the goods that you want");        return message;    }    private List<List<InlineKeyboardButton>> getRowsLine (SendMessage sendMessage) {        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();        markupInline.setKeyboard(rowsInline);        sendMessage.setReplyMarkup(markupInline);        return rowsInline;    }    private InlineKeyboardButton getInlineKeyBoardButton(String keyboardName, String callback) {        InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton(keyboardName);        inlineKeyboardButton.setCallbackData(callback);        return inlineKeyboardButton;    }}