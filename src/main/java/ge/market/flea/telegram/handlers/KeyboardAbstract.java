package ge.market.flea.telegram.handlers;import java.util.List;import java.util.Map;import ge.market.flea.constants.GoodConstant;import ge.market.flea.telegram.UserState;import org.telegram.abilitybots.api.sender.SilentSender;import org.telegram.telegrambots.meta.api.methods.send.SendMessage;import org.telegram.telegrambots.meta.api.objects.Update;import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;public abstract class KeyboardAbstract {    protected Map<String, UserState> userStateByCallBackData = Map.of(GoodConstant.MOBILE, UserState.MOBILE_SEARCH);    private final SilentSender sender;    private final Map<Long, UserState> chatStates;    public KeyboardAbstract(SilentSender sender, Map<Long, UserState> chatStates) {        this.sender = sender;        this.chatStates = chatStates;    }    public abstract void messageResolver(Update update);    protected void messageSender(SendMessage message) {        sender.execute(message);    }    protected long getChatId (Update update) {        Long chatId;        if (update.getMessage() == null) {            chatId =  update.getCallbackQuery().getMessage().getChatId();        } else {            chatId = update.getMessage().getChat().getId();        }        return chatId;    }    protected InlineKeyboardButton getInlineKeyBoardButton(String keyboardName, String callback) {        InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton(keyboardName);        inlineKeyboardButton.setCallbackData(callback);        return inlineKeyboardButton;    }    protected String getCallbackData(Update update) {        return update.getCallbackQuery().getData();    }    protected String getMessage(Update update) {        return update.getMessage().getText();    }}